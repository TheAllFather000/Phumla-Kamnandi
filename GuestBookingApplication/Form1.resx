<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jVq0UVZg/9k=
</value>
  </data>
</root>